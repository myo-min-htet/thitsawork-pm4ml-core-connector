openapi: 3.0.1
info:
  description: |
    Specification for the Payment Manager for Mojaloop API This API can be used by DFSP backends to simplify the process of sending and receiving funds within a Mojaloop scheme. **Note on terminology:** The term "Switch" is equal to the term "Hub", and the term "FSP" is equal to the term "DFSP".
  license:
    name: Apache License Version 2.0, January 2004
    url: http://www.apache.org/licenses/
  title: Payment Manager for Mojaloop API
  version: 1.8.2
servers:
- url: /
paths:
  /health:
    get:
      description: |
        The HTTP request `GET /health` is used to check if the application is up and running.
      operationId: getHealth
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
      - health
      x-accepts: application/json
      x-tags:
      - tag: health
  /sendmoney:
    post:
      description: |
        The HTTP request `POST /sendmoney` is used by the Payer DFSP to request the movement of funds from the Payer DFSP to the Payee DFSP. The underlying Mojaloop API has three stages for money transfer:
          1. Party lookup (discovery phase). This facilitates a check by the sending party that the destination party is correct before proceeding with a money movement.
          2. Quotation (agreement phase). This facilitates the exchange of fee information and the construction of a cryptographic "contract" between the Payee and Payer DFSPs before funds are transferred.
          3. Transfer (transfer phase). The enactment of the previously agreed "contract".
        This method has several modes of operation. - If the configuration variable `AUTO_ACCEPT_PARTY` is set to `"false"`, this method will terminate when the Payee party has been resolved and Payee party details have been returned.
          If the Payer wishes to proceed with the transfer, then a subsequent `PUT /sendmoney/{transferId}` request (accepting the Payee party) is required to continue the operation.
          The Payment Manager will then proceed to the quotation stage.
        - If the configuration variable `AUTO_ACCEPT_QUOTES` is set to `"false"`, this method will terminate and return the quotation when it has been received from the Payee DFSP.
          If the Payee wishes to proceed with the transfer, then a subsequent `PUT /sendmoney/{transferId}` request (accepting the quote) is required to continue the operation.
          The Payment Manager will then proceed to the transfer state.
        If the configuration variables `AUTO_ACCEPT_PARTY` and `AUTO_ACCEPT_QUOTES` are both set to `"true"`, this method will block until all three transfer stages are complete. Upon completion, it will return the entire set of transfer details received during the operation. Combinations of settings for `AUTO_ACCEPT...` configuration variables allow the Payment Manager user to decide which mode of operation best suits their use cases. i.e., the Payment Manager can be configured to "break" the three-stage transfer at these points in order to execute backend logic such as party verification, quoted fees assessments, etc.
      operationId: postSendMoney
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequest'
        description: Transfer request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponse'
          description: Transfer completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: Malformed or missing required body, headers or parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: An error occurred processing the transfer
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: Timeout occurred processing the transfer
      summary: Sends money from one account to another
      tags:
      - sendmoney
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: sendmoney
  /sendmoneybulk:
    post:
      description: |
        The HTTP request `POST /sendmoney` is used by the Payer DFSP to request the movement of funds from the Payer DFSP to the Payee DFSP. The underlying Mojaloop API has three stages for money transfer:
          1. Party lookup (discovery phase). This facilitates a check by the sending party that the destination party is correct before proceeding with a money movement.
          2. Quotation (agreement phase). This facilitates the exchange of fee information and the construction of a cryptographic "contract" between the Payee and Payer DFSPs before funds are transferred.
          3. Transfer (transfer phase). The enactment of the previously agreed "contract".
        This method has several modes of operation. - If the configuration variable `AUTO_ACCEPT_PARTY` is set to `"false"`, this method will terminate when the Payee party has been resolved and Payee party details have been returned.
          If the Payer wishes to proceed with the transfer, then a subsequent `PUT /sendmoney/{transferId}` request (accepting the Payee party) is required to continue the operation.
          The Payment Manager will then proceed to the quotation stage.
        - If the configuration variable `AUTO_ACCEPT_QUOTES` is set to `"false"`, this method will terminate and return the quotation when it has been received from the Payee DFSP.
          If the Payee wishes to proceed with the transfer, then a subsequent `PUT /sendmoney/{transferId}` request (accepting the quote) is required to continue the operation.
          The Payment Manager will then proceed to the transfer state.
        If the configuration variables `AUTO_ACCEPT_PARTY` and `AUTO_ACCEPT_QUOTES` are both set to `"true"`, this method will block until all three transfer stages are complete. Upon completion, it will return the entire set of transfer details received during the operation. Combinations of settings for `AUTO_ACCEPT...` configuration variables allow the Payment Manager user to decide which mode of operation best suits their use cases. i.e., the Payment Manager can be configured to "break" the three-stage transfer at these points in order to execute backend logic such as party verification, quoted fees assessments, etc.
      operationId: postSendMoneyBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequestBulk'
        description: Transfer request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponse'
          description: Transfer completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: Malformed or missing required body, headers or parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: An error occurred processing the transfer
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: Timeout occurred processing the transfer
      summary: Sends money from one account to another
      tags:
      - sendmoneybulk
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: sendmoneybulk
  /sendmoney/{transferId}:
    put:
      description: |
        The HTTP request `PUT /sendmoney/{transferId}` is used by the Payer DFSP to continue a transfer initiated via the `POST /sendmoney` method that has halted after party lookup and/or quotation stage. The request body should contain either the "acceptParty" or "acceptQuote" property set to `true` as required to continue the transfer. See the description of the `POST /sendmoney` HTTP method for more information on modes of transfer.
      operationId: putSendMoneyByTransferId
      parameters:
      - description: Transfer identifier.
        explode: false
        in: path
        name: transferId
        required: true
        schema:
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferContinuationAccept'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponse'
          description: Transfer completed successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: An error occurred processing the transfer
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorTransferResponse'
          description: Timeout occurred processing the transfer
      summary: Continues a transfer that has paused at the party lookup and/or quote
        stage in order to accept or reject Payee party and/or quote
      tags:
      - sendmoney
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: sendmoney
  /parties/{idType}/{idValue}:
    get:
      description: The HTTP request `GET /parties/{idType}/{idValue}` is sent to the
        Payee DFSP, and it is used to look up information regarding the requested
        transfer party, identified by `{idType}` and `{idValue}`.
      operationId: getPartiesByIdTypeIdValue
      parameters:
      - description: Below are the allowed values for the enumeration. - MSISDN -  An
          MSISDN (Mobile Station International Subscriber Directory Number, that is,
          the phone number) is used as reference to a participant. The MSISDN identifier
          should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).
          Optionally, the MSISDN may be prefixed by a single plus sign, indicating
          the international prefix. - ACCOUNT_ID - A bank account number or FSP account
          ID should be used as reference to a participant. The ACCOUNT_ID identifier
          can be in any format, as formats can greatly differ depending on country
          and FSP.
        explode: false
        in: path
        name: idType
        required: true
        schema:
          enum:
          - MSISDN
          - ACCOUNT_ID
          type: string
        style: simple
      - description: Identifier of the party.
        explode: false
        in: path
        name: idValue
        required: true
        schema:
          maxLength: 128
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferPartyInbound'
          description: Response containing details of the requested party
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Malformed or missing required headers or parameters
        "404":
          description: The party specified by the provided identifier type and value
            is not known to the server
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: An error occurred processing the request
      summary: Requests information relating to a transfer party identified by the
        specified identifier type and value
      tags:
      - parties
      x-accepts: application/json
      x-tags:
      - tag: parties
  /parties/{idType}/{idValue}/{idSubValue}:
    get:
      description: The HTTP request `GET /parties/{idType}/{idValue}/{idSubValue}`
        is sent to the Payee DFSP, and it is used to look up information regarding
        the requested transfer party, identified by `{idType}`, `{idValue}`, and {`idSubValue`}.
      operationId: getPartiesByIdTypeIdValueIdSubValue
      parameters:
      - description: Below are the allowed values for the enumeration. - MSISDN -  An
          MSISDN (Mobile Station International Subscriber Directory Number, that is,
          the phone number) is used as reference to a participant. The MSISDN identifier
          should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).
          Optionally, the MSISDN may be prefixed by a single plus sign, indicating
          the international prefix. - ACCOUNT_ID - A bank account number or FSP account
          ID should be used as reference to a participant. The ACCOUNT_ID identifier
          can be in any format, as formats can greatly differ depending on country
          and FSP.
        explode: false
        in: path
        name: idType
        required: true
        schema:
          enum:
          - MSISDN
          - ACCOUNT_ID
          type: string
        style: simple
      - description: Identifier of the party.
        explode: false
        in: path
        name: idValue
        required: true
        schema:
          maxLength: 128
          minLength: 1
          type: string
        style: simple
      - description: Sub identifier of the party.
        explode: false
        in: path
        name: idSubValue
        required: true
        schema:
          maxLength: 128
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferPartyInbound'
          description: Response containing details of the requested party
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Malformed or missing required headers or parameters
        "404":
          description: The party specified by the provided identifier type and value
            is not known to the server
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: An error occurred processing the request
      summary: Requests information relating to a transfer party identified by the
        specified identifier type and value, as well as a sub-identifier
      tags:
      - parties
      x-accepts: application/json
      x-tags:
      - tag: parties
  /quoterequests:
    post:
      description: The HTTP request `POST /quoterequests` is sent to the Payee DFSP,
        and it is used to request the creation of a quote for the provided financial
        transaction.
      operationId: postQuoteRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quoteRequest'
        description: Request for a transfer quotation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quoteResponse'
          description: A response to the transfer quotation request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Malformed or missing required headers or parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: An error occurred processing the request
      summary: Requests a quote for the specified transfer
      tags:
      - quoterequests
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: quoterequests
  /transfers:
    post:
      description: The HTTP request `POST /transfers` is sent to the Payee DFSP, and
        it is used to request the creation of a transfer for the transfer party.
      operationId: postTransfers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferRequestInbound'
        description: An incoming transfer request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponseInbound'
          description: The transfer was accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Malformed or missing required headers or parameters
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: An error occurred processing the request
      summary: Transfers funds from an external account to an internal account
      tags:
      - transfers
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: transfers
  /transfers/{transferId}:
    get:
      description: The HTTP request `GET /transfers/{transferId}` is sent to the Hub
        by the DFSP, and it is used to look up information regarding the given transfer,
        identified by `{transferId}`.
      operationId: getTransfersByTransferId
      parameters:
      - description: Transfer identifier.
        explode: false
        in: path
        name: transferId
        required: true
        schema:
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferStatusResponse'
          description: Response containing status of the requested transfer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Malformed or missing required headers or parameters
        "404":
          description: The party specified by the provided identifier type and value
            is not known to the server
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: An error occurred processing the request
      summary: Requests status relating to a transfer
      tags:
      - transfers
      x-accepts: application/json
      x-tags:
      - tag: transfers
    put:
      description: The HTTP request `PUT /transfers/{transferId}` is sent to the Payee
        DFSP, and it is used to notify the Payee DFSP about the final state of a transfer,
        to indicate whether the transfer has been committed or aborted in the Switch.
      operationId: putTransfersByTransferId
      parameters:
      - description: Transfer identifier.
        explode: false
        in: path
        name: transferId
        required: true
        schema:
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fulfilNotification'
        description: An incoming notification for a fulfilled transfer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferResponseInbound'
          description: The notification was accepted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: An error occurred processing the request
      summary: Provides a notification about the success/failure of a specific transfer
      tags:
      - transfers
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: transfers
components:
  parameters:
    idType:
      description: Below are the allowed values for the enumeration. - MSISDN -  An
        MSISDN (Mobile Station International Subscriber Directory Number, that is,
        the phone number) is used as reference to a participant. The MSISDN identifier
        should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).
        Optionally, the MSISDN may be prefixed by a single plus sign, indicating the
        international prefix. - ACCOUNT_ID - A bank account number or FSP account
        ID should be used as reference to a participant. The ACCOUNT_ID identifier
        can be in any format, as formats can greatly differ depending on country and
        FSP.
      explode: false
      in: path
      name: idType
      required: true
      schema:
        enum:
        - MSISDN
        - ACCOUNT_ID
        type: string
      style: simple
    idValue:
      description: Identifier of the party.
      explode: false
      in: path
      name: idValue
      required: true
      schema:
        maxLength: 128
        minLength: 1
        type: string
      style: simple
    idSubValue:
      description: Sub identifier of the party.
      explode: false
      in: path
      name: idSubValue
      required: true
      schema:
        maxLength: 128
        minLength: 1
        type: string
      style: simple
    transferId:
      description: Transfer identifier.
      explode: false
      in: path
      name: transferId
      required: true
      schema:
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
        type: string
      style: simple
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: Malformed or missing required headers or parameters
    "404":
      description: The party specified by the provided identifier type and value is
        not known to the server
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: An error occurred processing the request
    transferSuccess:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transferResponse'
      description: Transfer completed successfully
    transferBadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'
      description: Malformed or missing required body, headers or parameters
    transferServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'
      description: An error occurred processing the transfer
    transferTimeout:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorTransferResponse'
      description: Timeout occurred processing the transfer
  schemas:
    amountCurrency:
      description: Object containing Amount and Currency of the transfer.
      properties:
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        currency:
          $ref: '#/components/schemas/currency'
      required:
      - amount
      - currency
      type: object
    amountType:
      description: SEND for send amount. RECEIVE for receive amount.
      enum:
      - SEND
      - RECEIVE
      type: string
    currency:
      enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHF
      - CLP
      - CNY
      - COP
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GGP
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - IMP
      - INR
      - IQD
      - IRR
      - ISK
      - JEP
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SPL
      - SRD
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TVD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XCD
      - XDR
      - XOF
      - XPF
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMW
      - ZWD
      maxLength: 3
      minLength: 3
      type: string
    dateShort:
      description: Date in the form YYYY-MM-DD.
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
      type: string
    errorCode:
      description: |
        The API data type errorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.
      pattern: ^[1-9]\d{3}$
      title: ErrorCode
      type: string
    errorDescription:
      description: Error description string.
      maxLength: 128
      minLength: 1
      title: ErrorDescription
      type: string
    errorInformation:
      description: A Mojaloop API error information construct.
      example:
        errorDescription: errorDescription
        extensionList:
          extension:
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
        errorCode: errorCode
      properties:
        errorCode:
          description: |
            The API data type errorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.
          pattern: ^[1-9]\d{3}$
          title: ErrorCode
          type: string
        errorDescription:
          description: Error description string.
          maxLength: 128
          minLength: 1
          title: ErrorDescription
          type: string
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - errorCode
      - errorDescription
      title: ErrorInformation
      type: object
    errorResponse:
      properties:
        statusCode:
          description: Error code as string.
          pattern: ^[1-9]\d{2,3}$
          type: string
        message:
          description: Error message text.
          maxLength: 4096
          type: string
      type: object
    errorTransferResponse:
      allOf:
      - $ref: '#/components/schemas/errorResponse'
      - $ref: '#/components/schemas/errorTransferResponse_allOf'
    extensionItem:
      example:
        value: value
        key: key
      properties:
        key:
          maxLength: 32
          minLength: 1
          type: string
        value:
          maxLength: 128
          minLength: 1
          type: string
      type: object
    extensionList:
      items:
        $ref: '#/components/schemas/extensionItem'
      maxItems: 16
      minItems: 0
      type: array
    transferRequestBulkItem:
      properties:
        paymentTransactionID:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        orderID:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        processGUID:
          description: A Mojaloop API identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        fromFspID:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        fromFspCode:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        orgName:
          description: FSP name which the party is associated.
          maxLength: 255
          minLength: 0
          type: string
        toFspID:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        toFspCode:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        hubID:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        accountNo:
          description: Identifier of the party.
          maxLength: 125
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,125}$
          type: string
        accountTypeEnumID:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        accountType:
          $ref: '#/components/schemas/idType'
        payeeName:
          maxLength: 128
          minLength: 1
          type: string
        payeeMainIdentifier:
          description: Either a sub-identifier of an `{idValue}`, or a sub-type of
            the `{idType}`, normally a `{personalIdType}`, for example a phone number
            associated with an account
          maxLength: 128
          minLength: 1
          type: string
        payeeTypeEnumID:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        payeeType:
          $ref: '#/components/schemas/initiatorType'
        mobileNo1:
          description: Identifier of the party.
          maxLength: 125
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,125}$
          type: string
        mobileNo2:
          description: Identifier of the party.
          maxLength: 125
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,125}$
          type: string
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        currency:
          $ref: '#/components/schemas/currency'
        referenceID:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        referenceNote:
          maxLength: 255
          type: string
        fees1:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        fees2:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        fees3:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        requestedDate:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        createdDtm:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        createdByID:
          description: A Mojaloop API identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
      required:
      - accountNo
      - fromFspCode
      - fromFspID
      - hubID
      - orderID
      - paymentTransactionID
      - processGUID
      - toFspCode
      - toFspID
      type: object
    extensionListComplex:
      description: Data model for the complex type ExtensionList
      example:
        extension:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
      properties:
        extension:
          description: Number of Extension elements
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 1
          type: array
      required:
      - extension
      type: object
    fspId:
      description: FSP with which the party is associated.
      maxLength: 32
      minLength: 1
      type: string
    fspName:
      description: FSP name which the party is associated.
      maxLength: 255
      minLength: 0
      type: string
    fulfilNotification:
      description: PUT /transfers/{transferId} object
      properties:
        transferId:
          description: A Mojaloop API transfer identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        direction:
          enum:
          - INBOUND
          type: string
        quoteRequest:
          $ref: '#/components/schemas/fulfilNotification_quoteRequest'
        quoteResponse:
          $ref: '#/components/schemas/fulfilNotification_quoteResponse'
        prepare:
          $ref: '#/components/schemas/fulfilNotification_prepare'
        fulfil:
          $ref: '#/components/schemas/fulfilNotification_quoteResponse'
        quote:
          $ref: '#/components/schemas/fulfilNotification_quote'
        currentState:
          $ref: '#/components/schemas/transferStatus'
        lastError:
          $ref: '#/components/schemas/transferError'
        initiatedTimestamp:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        finalNotification:
          $ref: '#/components/schemas/fulfilNotification_finalNotification'
      title: TransfersIDPatchResponse
      type: object
    geoCode:
      description: |
        Data model for the Mojaloop API complex type GeoCode. Indicates a geographic location
      example:
        latitude: latitude
        longitude: longitude
      properties:
        latitude:
          description: |
            The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.
          pattern: ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
          type: string
        longitude:
          description: The API data type Longitude is a JSON String in a lexical format
            that is restricted by a regular expression for interoperability reasons.
          pattern: ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
          type: string
      required:
      - latitude
      - longitude
      type: object
    homeTransactionId:
      description: Transaction ID from the DFSP backend, used to reconcile transactions
        between the Switch and DFSP backend systems.
      maxLength: 255
      type: string
    idSubValue:
      description: Either a sub-identifier of an `{idValue}`, or a sub-type of the
        `{idType}`, normally a `{personalIdType}`, for example a phone number associated
        with an account
      maxLength: 128
      minLength: 1
      type: string
    idType:
      description: |-
        Below are the allowed values for the enumeration.
        - MSISDN -  An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.
      enum:
      - MSISDN
      - ACCOUNT_ID
      type: string
    idValue:
      description: Identifier of the party.
      maxLength: 125
      minLength: 4
      pattern: ^[A-Za-z0-9]{4,125}$
      type: string
    ilpCondition:
      description: Condition that must be attached to the transfer by the Payer.
      maxLength: 48
      pattern: ^[A-Za-z0-9-_]{43}$
      type: string
    ilpFulfilment:
      description: Fulfilment that must be attached to the transfer by the Payee.
      maxLength: 48
      pattern: ^[A-Za-z0-9-_]{43}$
      type: string
    ilpPacket:
      description: Information for recipient (transport layer information).
      maxLength: 32768
      minLength: 1
      pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
      type: string
    ilpPacketData:
      description: Object containing transfer object.
      properties:
        quoteId:
          description: A Mojaloop API quote identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        transactionId:
          description: ID of the transaction, the ID is decided by the Payer FSP during
            the creation of the quote.
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        payer:
          $ref: '#/components/schemas/Party'
        payee:
          $ref: '#/components/schemas/Party'
        amount:
          $ref: '#/components/schemas/amountCurrency'
        transactionType:
          $ref: '#/components/schemas/transactionTypeObject'
      required:
      - amount
      - payee
      - payer
      - quoteId
      - transactionId
      - transactionType
      type: object
    initiator:
      description: Specifies if the initiator of the transfer is the Payer or Payee.
      enum:
      - PAYER
      - PAYEE
      type: string
    initiatorType:
      description: |
        Below are the allowed values for the enumeration - CONSUMER Consumer is the initiator of the transaction. Example - peer-to-peer transfer or loan repayment from wallet. - AGENT Agent is the initiator of the transaction. Example - loan repayment via an agent. - BUSINESS Business is the initiator of the transaction. Example - loan disbursement. - DEVICE Device is the initiator of the transaction. Example - merchant-initiated merchant payment authorized on POS.
      enum:
      - CONSUMER
      - AGENT
      - BUSINESS
      - DEVICE
      type: string
    latitude:
      description: |
        The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.
      pattern: ^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
    longitude:
      description: The API data type Longitude is a JSON String in a lexical format
        that is restricted by a regular expression for interoperability reasons.
      pattern: ^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$
      type: string
    merchantClassificationCode:
      description: Up to 4 digits specifying the sender's merchant classification,
        if known and applicable.
      pattern: ^[\d]{1,4}$
      type: string
    mojaloopError:
      example:
        errorInformation:
          errorDescription: errorDescription
          extensionList:
            extension:
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
          errorCode: errorCode
      properties:
        errorInformation:
          $ref: '#/components/schemas/errorInformation'
      type: object
    mojaloopIdentifier:
      description: A Mojaloop API identifier (UUID).
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    mojaloopMoney:
      description: Data model for the Mojaloop API complex type Money.
      example:
        amount: amount
      properties:
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
      required:
      - amount
      - currency
      title: Money
      type: object
    mojaloopQuoteRequestObject:
      properties:
        quoteId:
          description: A Mojaloop API quote identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        transactionId:
          description: ID of the transaction, the ID is decided by the Payer FSP during
            the creation of the quote.
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        amountType:
          $ref: '#/components/schemas/amountType'
        amount:
          $ref: '#/components/schemas/mojaloopMoney'
        fees:
          $ref: '#/components/schemas/mojaloopMoney'
        expiration:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        payer:
          $ref: '#/components/schemas/Party'
        payee:
          $ref: '#/components/schemas/Party'
        transactionType:
          $ref: '#/components/schemas/mojaloopTransactionType'
        note:
          description: An optional note associated with the requested transfer.
          maxLength: 128
          minLength: 1
          type: string
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - amount
      - amountType
      - payee
      - payer
      - quoteId
      - transactionId
      - transactionType
      type: object
    mojaloopQuoteResponseObject:
      properties:
        transferAmount:
          $ref: '#/components/schemas/mojaloopMoney'
        expiration:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        ilpPacket:
          description: Information for recipient (transport layer information).
          maxLength: 32768
          minLength: 1
          pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
          type: string
        condition:
          description: Condition that must be attached to the transfer by the Payer.
          maxLength: 48
          pattern: ^[A-Za-z0-9-_]{43}$
          type: string
        payeeReceiveAmount:
          $ref: '#/components/schemas/mojaloopMoney'
        payeeFspFee:
          $ref: '#/components/schemas/mojaloopMoney'
        payeeFspCommission:
          $ref: '#/components/schemas/mojaloopMoney'
        geoCode:
          $ref: '#/components/schemas/geoCode'
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - condition
      - expiration
      - ilpPacket
      - transferAmount
      type: object
    mojaloopTransactionType:
      description: Data model for the complex type mojaloopTransactionType.
      properties:
        scenario:
          $ref: '#/components/schemas/TransactionScenario'
        subScenario:
          description: Possible sub-scenario, defined locally within the scheme (UndefinedEnum
            Type).
          pattern: ^[A-Z_]{1,32}$
          type: string
        initiator:
          $ref: '#/components/schemas/initiator'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
      required:
      - initiator
      - initiatorType
      - scenario
      title: mojaloopTransactionType
      type: object
    mojaloopTransferState:
      description: |
        Below are the allowed values for the enumeration - RECEIVED The Switch has received the transfer. - RESERVED The Switch has reserved the transfer. - COMMITTED The Switch has successfully performed the transfer. - ABORTED The Switch has aborted the transfer due a rejection or failure to perform the transfer.
      enum:
      - RECEIVED
      - RESERVED
      - COMMITTED
      - ABORTED
      type: string
    money:
      pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
      type: string
    Party:
      description: Data model for the complex type Party.
      properties:
        partyIdInfo:
          $ref: '#/components/schemas/PartyIdInfo'
        merchantClassificationCode:
          description: Up to 4 digits specifying the sender's merchant classification,
            if known and applicable.
          pattern: ^[\d]{1,4}$
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        personalInfo:
          $ref: '#/components/schemas/PartyPersonalInfo'
      required:
      - partyIdInfo
      title: Party
      type: object
    PartyComplexName:
      description: Data model for the complex type PartyComplexName.
      properties:
        firstName:
          maxLength: 128
          minLength: 1
          type: string
        middleName:
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          maxLength: 128
          minLength: 1
          type: string
      title: PartyComplexName
      type: object
    PartyIdInfo:
      description: Data model for the complex type PartyIdInfo.
      properties:
        partyIdType:
          $ref: '#/components/schemas/idType'
        partyIdentifier:
          description: An identifier for the Party.
          maxLength: 128
          minLength: 1
          type: string
        partySubIdOrType:
          description: A sub-identifier or sub-type for the Party.
          maxLength: 128
          minLength: 1
          type: string
        fspId:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - partyIdType
      - partyIdentifier
      title: PartyIdInfo
      type: object
    partyName:
      maxLength: 128
      minLength: 1
      type: string
    PartyPersonalInfo:
      description: Data model for the complex type PartyPersonalInfo.
      properties:
        complexName:
          $ref: '#/components/schemas/PartyComplexName'
        dateOfBirth:
          description: Date in the form YYYY-MM-DD.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
          type: string
      title: PartyPersonalInfo
      type: object
    payerType:
      description: |
        Below are the allowed values for the enumeration - CONSUMER Consumer is the initiator of the transaction. Example - peer-to-peer transfer or loan repayment from wallet. - AGENT Agent is the initiator of the transaction. Example - loan repayment via an agent. - BUSINESS Business is the initiator of the transaction. Example - loan disbursement. - DEVICE Device is the initiator of the transaction. Example - merchant-initiated merchant payment authorized on POS.
      enum:
      - CONSUMER
      - AGENT
      - BUSINESS
      - DEVICE
      type: string
    quote:
      description: Mojaloop API response to a quote request
      example:
        payeeFspCommission:
          amount: amount
        condition: condition
        ilpPacket: ilpPacket
        extensionList:
          extension:
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
        transferAmount:
          amount: amount
        payeeFspFee:
          amount: amount
        geoCode:
          latitude: latitude
          longitude: longitude
        expiration: expiration
        payeeReceiveAmount:
          amount: amount
      properties:
        transferAmount:
          $ref: '#/components/schemas/mojaloopMoney'
        payeeReceiveAmount:
          $ref: '#/components/schemas/mojaloopMoney'
        payeeFspFee:
          $ref: '#/components/schemas/mojaloopMoney'
        payeeFspCommission:
          $ref: '#/components/schemas/mojaloopMoney'
        expiration:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        geoCode:
          $ref: '#/components/schemas/geoCode'
        ilpPacket:
          description: Information for recipient (transport layer information).
          maxLength: 32768
          minLength: 1
          pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
          type: string
        condition:
          description: Condition that must be attached to the transfer by the Payer.
          maxLength: 48
          pattern: ^[A-Za-z0-9-_]{43}$
          type: string
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - condition
      - expiration
      - ilpPacket
      - transferAmount
      type: object
    quoteId:
      description: A Mojaloop API quote identifier (UUID).
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    quoteRequest:
      description: A request for a quote for transfer from the DFSP backend.
      properties:
        quoteId:
          description: A Mojaloop API quote identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        transactionId:
          description: ID of the transaction, the ID is decided by the Payer FSP during
            the creation of the quote.
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        to:
          $ref: '#/components/schemas/transferPartyInbound'
        from:
          $ref: '#/components/schemas/transferPartyInbound'
        amountType:
          $ref: '#/components/schemas/amountType'
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        currency:
          $ref: '#/components/schemas/currency'
        feesAmount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        feesCurrency:
          $ref: '#/components/schemas/currency'
        transactionType:
          $ref: '#/components/schemas/transactionType'
        initiator:
          $ref: '#/components/schemas/initiator'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
        geoCode:
          $ref: '#/components/schemas/geoCode'
        note:
          description: An optional note associated with the requested transfer.
          maxLength: 128
          minLength: 1
          type: string
        expiration:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        extensionList:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - amount
      - amountType
      - currency
      - from
      - initiator
      - initiatorType
      - quoteId
      - to
      - transactionId
      - transactionType
      type: object
    quoteResponse:
      description: A response to a request for a quote.
      example:
        transferAmount: transferAmount
        geoCode:
          latitude: latitude
          longitude: longitude
        payeeFspCommissionAmount: payeeFspCommissionAmount
        quoteId: quoteId
        transactionId: transactionId
        payeeReceiveAmount: payeeReceiveAmount
        payeeFspFeeAmount: payeeFspFeeAmount
        extensionList:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        expiration: expiration
      properties:
        quoteId:
          description: A Mojaloop API quote identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        transactionId:
          description: ID of the transaction, the ID is decided by the Payer FSP during
            the creation of the quote.
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        transferAmount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        transferAmountCurrency:
          $ref: '#/components/schemas/currency'
        payeeReceiveAmount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        payeeReceiveAmountCurrency:
          $ref: '#/components/schemas/currency'
        payeeFspFeeAmount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        payeeFspFeeAmountCurrency:
          $ref: '#/components/schemas/currency'
        payeeFspCommissionAmount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        payeeFspCommissionAmountCurrency:
          $ref: '#/components/schemas/currency'
        expiration:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        geoCode:
          $ref: '#/components/schemas/geoCode'
        extensionList:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - quoteId
      - transactionId
      - transferAmount
      - transferAmountCurrency
      type: object
    scenario:
      enum:
      - TRANSFER
      type: string
    timestamp:
      description: An ISO-8601 formatted timestamp.
      pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      type: string
    transactionId:
      description: ID of the transaction, the ID is decided by the Payer FSP during
        the creation of the quote.
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    TransactionScenario:
      description: |-
        Below are the allowed values for the enumeration.
        - DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User. - WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer's account to a Business account, and physical cash is given from the Business User to the Consumer. - TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction. - PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on. - REFUND - Used for performing a refund of transaction.
      enum:
      - DEPOSIT
      - WITHDRAWAL
      - TRANSFER
      - PAYMENT
      - REFUND
      title: TransactionScenario
      type: string
    transactionType:
      description: |-
        Type of transaction. Below are the allowed values for the enumeration.
        - LOAN_REPAYMENT - Used in the loan repayment use case when the loan repayment goes to a loan account. - SAVINGS_DEPOSIT - Used in the loan repayment use case when the loan repayment goes to a savings account. - TRANSFER - Used in the loan disbursement use case.
      enum:
      - LOAN_REPAYMENT
      - SAVINGS_DEPOSIT
      - TRANSFER
      type: string
    transactionTypeObject:
      description: Object containing transfer object.
      properties:
        scenario:
          $ref: '#/components/schemas/scenario'
        initiator:
          $ref: '#/components/schemas/initiator'
        initiatorType:
          $ref: '#/components/schemas/initiatorType'
      required:
      - initiator
      - initiatorType
      - scenario
      type: object
    transferContinuationAccept:
      properties:
        acceptQuote:
          enum:
          - true
          - false
          type: boolean
        acceptParty:
          enum:
          - true
          - false
          type: boolean
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        to:
          $ref: '#/components/schemas/transferParty'
      type: object
    transferError:
      description: This object represents a Mojaloop API error received at any time
        during the transfer process
      example:
        mojaloopError:
          errorInformation:
            errorDescription: errorDescription
            extensionList:
              extension:
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
            errorCode: errorCode
        httpStatusCode: 0
      properties:
        httpStatusCode:
          description: The HTTP status code returned to the caller. This is the same
            as the actual HTTP status code returned with the response.
          type: integer
        mojaloopError:
          $ref: '#/components/schemas/mojaloopError'
      type: object
    transferFulfilment:
      description: A Mojaloop API transfer fulfilment
      example:
        extensionList:
          extension:
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
        completedTimestamp: completedTimestamp
        fulfilment: fulfilment
      properties:
        fulfilment:
          description: Fulfilment that must be attached to the transfer by the Payee.
          maxLength: 48
          pattern: ^[A-Za-z0-9-_]{43}$
          type: string
        completedTimestamp:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        transferState:
          $ref: '#/components/schemas/mojaloopTransferState'
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - transferState
      type: object
    transferId:
      description: A Mojaloop API transfer identifier (UUID).
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
      type: string
    transferParty:
      example:
        firstName: firstName
        lastName: lastName
        idSubValue: idSubValue
        displayName: displayName
        extensionList:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        merchantClassificationCode: merchantClassificationCode
        idValue: idValue
        middleName: middleName
        dateOfBirth: dateOfBirth
        fspId: fspId
      properties:
        type:
          $ref: '#/components/schemas/payerType'
        idType:
          $ref: '#/components/schemas/idType'
        idValue:
          description: Identifier of the party.
          maxLength: 125
          minLength: 4
          pattern: ^[A-Za-z0-9]{4,125}$
          type: string
        idSubValue:
          description: Either a sub-identifier of an `{idValue}`, or a sub-type of
            the `{idType}`, normally a `{personalIdType}`, for example a phone number
            associated with an account
          maxLength: 128
          minLength: 1
          type: string
        displayName:
          maxLength: 128
          minLength: 1
          type: string
        firstName:
          maxLength: 128
          minLength: 1
          type: string
        middleName:
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          maxLength: 128
          minLength: 1
          type: string
        dateOfBirth:
          description: Date in the form YYYY-MM-DD.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
          type: string
        merchantClassificationCode:
          description: Up to 4 digits specifying the sender's merchant classification,
            if known and applicable.
          pattern: ^[\d]{1,4}$
          type: string
        fspId:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        extensionList:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - idType
      - idValue
      type: object
    transferPartyInbound:
      example:
        firstName: firstName
        lastName: lastName
        idSubValue: idSubValue
        displayName: displayName
        extensionList:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        merchantClassificationCode: merchantClassificationCode
        idValue: idValue
        middleName: middleName
        dateOfBirth: dateOfBirth
        fspId: fspId
      properties:
        type:
          $ref: '#/components/schemas/payerType'
        idType:
          $ref: '#/components/schemas/idType'
        idValue:
          description: The identifier string used to identify the sender.
          type: string
        idSubValue:
          description: Either a sub-identifier of an `{idValue}`, or a sub-type of
            the `{idType}`, normally a `{personalIdType}`, for example a phone number
            associated with an account
          maxLength: 128
          minLength: 1
          type: string
        displayName:
          maxLength: 128
          minLength: 1
          type: string
        firstName:
          maxLength: 128
          minLength: 1
          type: string
        middleName:
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          maxLength: 128
          minLength: 1
          type: string
        dateOfBirth:
          description: Date in the form YYYY-MM-DD.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$
          type: string
        merchantClassificationCode:
          description: Up to 4 digits specifying the sender's merchant classification,
            if known and applicable.
          pattern: ^[\d]{1,4}$
          type: string
        fspId:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        extensionList:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - idType
      - idValue
      type: object
    transferRequest:
      properties:
        homeTransactionId:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        quoteRequestExtensions:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
        transferRequestExtensions:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - amount
      - amountType
      - currency
      - from
      - homeTransactionId
      - to
      - transactionType
      type: object
    transferRequestBulk:
      description: Data model for the bulk payment list
      properties:
        transferRequestBulkList:
          items:
            $ref: '#/components/schemas/transferRequestBulkItem'
          minItems: 1
          type: array
      required:
      - transferRequestBulkList
      type: object
    transferRequestInbound:
      properties:
        transferId:
          description: A Mojaloop API transfer identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        quote:
          $ref: '#/components/schemas/quoteResponse'
        from:
          $ref: '#/components/schemas/transferPartyInbound'
        to:
          $ref: '#/components/schemas/transferPartyInbound'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        transactionType:
          $ref: '#/components/schemas/transactionType'
        ilpPacket:
          $ref: '#/components/schemas/transferRequestInbound_ilpPacket'
        note:
          maxLength: 128
          type: string
        extensionList:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - amount
      - amountType
      - currency
      - from
      - quote
      - to
      - transactionType
      - transferId
      type: object
    transferResponse:
      example:
        note: note
        prepare:
          path: path
          headers: '{}'
          agent: agent
          method: method
          port: port
          host: host
          body: body
        lastError:
          mojaloopError:
            errorInformation:
              errorDescription: errorDescription
              extensionList:
                extension:
                - value: value
                  key: key
                - value: value
                  key: key
                - value: value
                  key: key
                - value: value
                  key: key
                - value: value
                  key: key
              errorCode: errorCode
          httpStatusCode: 0
        quoteRequestExtensions:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        quoteResponse:
          headers: '{}'
          body:
            payeeFspCommission:
              amount: amount
            condition: condition
            ilpPacket: ilpPacket
            extensionList:
              extension:
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
            transferAmount:
              amount: amount
            payeeFspFee:
              amount: amount
            geoCode:
              latitude: latitude
              longitude: longitude
            expiration: expiration
            payeeReceiveAmount:
              amount: amount
        from:
          firstName: firstName
          lastName: lastName
          idSubValue: idSubValue
          displayName: displayName
          extensionList:
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          merchantClassificationCode: merchantClassificationCode
          idValue: idValue
          middleName: middleName
          dateOfBirth: dateOfBirth
          fspId: fspId
        quoteRequest:
          path: path
          headers: '{}'
          agent: agent
          method: method
          port: port
          host: host
          body: body
        fulfil:
          headers: '{}'
          body:
            extensionList:
              extension:
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
              - value: value
                key: key
            completedTimestamp: completedTimestamp
            fulfilment: fulfilment
        direction: OUTBOUND
        acceptQuote: true
        amount: amount
        transferRequestExtensions:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        acceptParty: true
        quoteResponseSource: quoteResponseSource
        transferId: transferId
        quoteId: quoteId
        getPartiesRequest:
          path: path
          headers: '{}'
          agent: agent
          method: method
          port: port
          host: host
          body: '{}'
        getPartiesResponse:
          headers: '{}'
          body: '{}'
        to:
          firstName: firstName
          lastName: lastName
          idSubValue: idSubValue
          displayName: displayName
          extensionList:
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          merchantClassificationCode: merchantClassificationCode
          idValue: idValue
          middleName: middleName
          dateOfBirth: dateOfBirth
          fspId: fspId
        homeTransactionId: homeTransactionId
        initiatedTimestamp: initiatedTimestamp
      properties:
        transferId:
          description: A Mojaloop API identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        homeTransactionId:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
        from:
          $ref: '#/components/schemas/transferParty'
        to:
          $ref: '#/components/schemas/transferParty'
        amountType:
          $ref: '#/components/schemas/amountType'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          pattern: ^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$
          type: string
        transactionType:
          $ref: '#/components/schemas/transactionType'
        note:
          maxLength: 128
          type: string
        currentState:
          $ref: '#/components/schemas/transferStatus'
        quoteRequestExtensions:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
        transferRequestExtensions:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
        initiatedTimestamp:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        direction:
          enum:
          - OUTBOUND
          type: string
        getPartiesRequest:
          $ref: '#/components/schemas/transferResponse_getPartiesRequest'
        getPartiesResponse:
          $ref: '#/components/schemas/transferResponse_getPartiesResponse'
        acceptParty:
          enum:
          - true
          - false
          type: boolean
        quoteId:
          description: A Mojaloop API identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        quoteRequest:
          $ref: '#/components/schemas/transferResponse_quoteRequest'
        quoteResponse:
          $ref: '#/components/schemas/transferResponse_quoteResponse'
        quoteResponseSource:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        acceptQuote:
          enum:
          - true
          - false
          type: boolean
        prepare:
          $ref: '#/components/schemas/transferResponse_quoteRequest'
        fulfil:
          $ref: '#/components/schemas/transferResponse_fulfil'
        lastError:
          $ref: '#/components/schemas/transferError'
      required:
      - amount
      - amountType
      - currency
      - from
      - to
      - transactionType
      type: object
    transferResponseInbound:
      example:
        homeTransactionId: homeTransactionId
      properties:
        homeTransactionId:
          description: Transaction ID from the DFSP backend, used to reconcile transactions
            between the Switch and DFSP backend systems.
          maxLength: 255
          type: string
      type: object
    transferState:
      description: |
        Below are the allowed values for the enumeration - COMMITTED The transfer has been committed in the Switch. The Payee DFSP responds to the `COMMITTED` state with an HTTP 200 message, and then marks the transfer as completed. in its internal records. - ABORTED The transfer has been aborted in the Switch. The Payee DFSP responds to the `ABORTED` state with an HTTP 200 message, and then aborts the transfer in its internal records.
      enum:
      - COMMITTED
      - ABORTED
      type: string
    transferStatus:
      description: |
        Below are the allowed values for the enumeration - ERROR_OCCURRED An error has occurred during the transfer process. - WAITING_FOR_PARTY_ACCEPTANCE `AUTO_ACCEPT_PARTY` is set to "false" and party information has been returned, waiting to be accepted by the Payer DFSP using a `PUT /sendmoney/{transferId}` request. - WAITING_FOR_QUOTE_ACCEPTANCE `AUTO_ACCEPT_QUOTE` is set to "false" and quote information has been returned, waiting to be accepted by the Payer DFSP using a `PUT /sendmoney/{transferId}` request. - COMPLETED The transfer has completed successfully.
      enum:
      - ERROR_OCCURRED
      - WAITING_FOR_PARTY_ACCEPTANCE
      - WAITING_FOR_QUOTE_ACCEPTANCE
      - COMPLETED
      type: string
    transferStatusResponse:
      example:
        completedTimestamp: completedTimestamp
        transferId: transferId
      properties:
        transferId:
          description: A Mojaloop API identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        transferState:
          $ref: '#/components/schemas/transferStatus'
        completedTimestamp:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
      type: object
    errorTransferResponse_allOf:
      properties:
        transferState:
          $ref: '#/components/schemas/transferResponse'
      required:
      - transferState
      type: object
    fulfilNotification_quoteRequest:
      properties:
        headers:
          type: object
        body:
          $ref: '#/components/schemas/mojaloopQuoteRequestObject'
      type: object
    fulfilNotification_quoteResponse:
      properties:
        headers:
          type: object
        body:
          type: string
      type: object
    fulfilNotification_prepare_body:
      properties:
        transferId:
          description: A Mojaloop API transfer identifier (UUID).
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$
          type: string
        payeeFsp:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        payerFsp:
          description: FSP with which the party is associated.
          maxLength: 32
          minLength: 1
          type: string
        amount:
          $ref: '#/components/schemas/mojaloopMoney'
        ilpPacket:
          description: Information for recipient (transport layer information).
          maxLength: 32768
          minLength: 1
          pattern: ^[A-Za-z0-9-_]+[=]{0,2}$
          type: string
        condition:
          description: Condition that must be attached to the transfer by the Payer.
          maxLength: 48
          pattern: ^[A-Za-z0-9-_]{43}$
          type: string
        expiration:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        extensionList:
          $ref: '#/components/schemas/extensionListComplex'
      required:
      - amount
      type: object
    fulfilNotification_prepare:
      properties:
        body:
          $ref: '#/components/schemas/fulfilNotification_prepare_body'
        headers:
          type: object
      type: object
    fulfilNotification_quote:
      properties:
        request:
          $ref: '#/components/schemas/mojaloopQuoteRequestObject'
        internalRequest:
          $ref: '#/components/schemas/quoteRequest'
        response:
          $ref: '#/components/schemas/quoteResponse'
        mojaloopResponse:
          $ref: '#/components/schemas/mojaloopQuoteResponseObject'
        fulfilment:
          description: Fulfilment that must be attached to the transfer by the Payee.
          maxLength: 48
          pattern: ^[A-Za-z0-9-_]{43}$
          type: string
      type: object
    fulfilNotification_finalNotification:
      properties:
        completedTimestamp:
          description: An ISO-8601 formatted timestamp.
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
          type: string
        transferState:
          $ref: '#/components/schemas/transferState'
        extensionList:
          items:
            $ref: '#/components/schemas/extensionItem'
          maxItems: 16
          minItems: 0
          type: array
      required:
      - completedTimestamp
      - transferState
      type: object
    transferRequestInbound_ilpPacket:
      properties:
        data:
          $ref: '#/components/schemas/ilpPacketData'
      required:
      - data
      type: object
    transferResponse_getPartiesRequest:
      example:
        path: path
        headers: '{}'
        agent: agent
        method: method
        port: port
        host: host
        body: '{}'
      properties:
        method:
          type: string
        host:
          type: string
        port:
          type: string
        path:
          type: string
        headers:
          type: object
        agent:
          type: string
        body:
          type: object
      type: object
    transferResponse_getPartiesResponse:
      example:
        headers: '{}'
        body: '{}'
      properties:
        body:
          type: object
        headers:
          type: object
      required:
      - body
      type: object
    transferResponse_quoteRequest:
      example:
        path: path
        headers: '{}'
        agent: agent
        method: method
        port: port
        host: host
        body: body
      properties:
        method:
          type: string
        host:
          type: string
        port:
          type: string
        path:
          type: string
        headers:
          type: object
        agent:
          type: string
        body:
          type: string
      type: object
    transferResponse_quoteResponse:
      example:
        headers: '{}'
        body:
          payeeFspCommission:
            amount: amount
          condition: condition
          ilpPacket: ilpPacket
          extensionList:
            extension:
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
          transferAmount:
            amount: amount
          payeeFspFee:
            amount: amount
          geoCode:
            latitude: latitude
            longitude: longitude
          expiration: expiration
          payeeReceiveAmount:
            amount: amount
      properties:
        body:
          $ref: '#/components/schemas/quote'
        headers:
          type: object
      required:
      - body
      type: object
    transferResponse_fulfil:
      example:
        headers: '{}'
        body:
          extensionList:
            extension:
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
            - value: value
              key: key
          completedTimestamp: completedTimestamp
          fulfilment: fulfilment
      properties:
        body:
          $ref: '#/components/schemas/transferFulfilment'
        headers:
          type: object
      required:
      - body
      type: object
